#!/usr/bin/perl -I../lib
#
# Assumptions:
#   docker is running -dev w/ the `hosts` command available
#
#   All docker hosts attached are pointing to the same registry, and
#   that the original container was booted from an image there
#
#   You are running this from the directory where blimp exists; need to
#   fix library paths in a better way
#
# To do:
# 
#   address dupe container name possibility, take container ids...
#   does not react well if a host is down
#   set active host back to what it was prior to run ?
#
###

# container
#docker inspect $CONTAINERNAME > $FILE
#
# get image id
#export IMAGEID=`jq '.[] | .Image' $FILE | sed -e 's/"//g'`
#echo "found image id: $IMAGEID"
#
#| jq -
#
# Config Cmd []
# | jq '.[] | .Config | .Cmd | .[]' -
#    "redis-server"
#
# args
# entrypoint ?
# env ?
# user ?
# working dir?
#
# nice:
# could print out lifetime of container?
# hostname
# cgroup stuff
# tty
# volumes
#
# image
#export IMAGENAME=`docker images --no-trunc=true | grep $IMAGEID | head -1 | awk '{print $1}'`
#echo "found image name: $IMAGENAME"

use warnings;
use strict;
use JSON;
use Carp;
require bail;
require capture;
require containers;
require docker;
require hosts;

my $c;

if($#ARGV < 0) {
  usage();
  exit(1);
} else {
  $c = $ARGV[0];
  if($c eq 'ls') {
    ls();
  } elsif($c eq 'move') {
    move($ARGV[1], $ARGV[2]);
  }
}

exit(0);

sub usage {
  print "Please specify arguments...\n"
}

sub ls {

  my $out;

  # get containers
  $out = containers::enumerate();
  print "$out\n";

  return();

}

sub move {

  my $clist;
  my $container;
  my $found;
  my $i;
  my $j;
  my @lines;
  my @parts;
  my $targethost;

  $container  = shift || '';
  $targethost = shift || '';

  $found = 0;
  if($container && $container !~ /^\s*$/ && $targethost && $targethost !~ /^\s*$/) {
    print "planning to move $container to $targethost...\n";
    $clist = containers::enumerate();
    @lines = split(/\n/, $clist);
    for($i = 0; $i <= $#lines; $i++) {
      @parts = split(/\s+/, $lines[$i]); # XXX only works for some cols - move to api
      if($parts[$#parts] eq $container) {
        if(1 == $found) {
          bail::bye("Sorry, a container by this name exists on more than one host.");
          # XXX let user supply ids as well...
        }
        print "found container on current host $parts[0]\n";
        $found = 1;
        if($parts[0] eq $targethost) {
          bail::bye("Sorry, you can't move a container to the host it is already on.");
        }
      }
    }

    if(0 == $found) {
      bail::bye("Sorry, could not find a container by that name.");
    } else {
      print "everything checks out ...\n";
    }

  } else {
    bail::bye("Sorry, something was wrong with those parameters.");
  }

  return();

}
